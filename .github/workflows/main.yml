name: "On Pull Request"

on:
  pull_request:
    branches:
      - master
  
  workflow_dispatch: 
  # this allows to run the workflow manually through the github dashboard


jobs:

  LOCALHOST_TESTS:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest

    steps:
      - name: print-github.action_path
        run: echo $GITHUB_WORKSPACE

      - name: Clone Lithops repository
        uses: actions/checkout@v3

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          architecture: x64

      - name: Install dependencies
        run: |
          python3 setup.py install

      - name: Run Lithops tests
        run: |
          lithops verify -b localhost -s localhost


  Determine_Runnable_Jobs:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'

    runs-on: ubuntu-latest

    outputs:
      ibm_cf: ${{ steps.script.outputs.ibm_cf }}
      code_engine: ${{ steps.script.outputs.code_engine }}

    steps:
      - name: Clone Lithops repository
        uses: actions/checkout@v3

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          architecture: x64

      - name: Determine which jobs to run
        id: script
        run: |
          echo -n -e "${{ secrets.LITHOPS_CONFIG }}" > /tmp/lithops_config.yaml
          if grep -Fxq "ibm_cf:" /tmp/lithops_config.yaml
          then
            echo "::set-output name=ibm_cf::true"
          else
            echo "::set-output name=ibm_cf::false"
          fi
          if grep -Fxq "code_engine:" /tmp/lithops_config.yaml
          then
            echo "::set-output name=code_engine::true"
          else
            echo "::set-output name=code_engine::false"
          fi


  CE_COS_TESTS:
    runs-on: ubuntu-latest
    needs: Determine_Runnable_Jobs
    if: needs.Determine_Runnable_Jobs.outputs.code_engine == 'true'

    steps:
      - name: print-github.action_path
        run: echo $GITHUB_WORKSPACE

      - name: Clone Lithops repository
        uses: actions/checkout@v3

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          architecture: x64

      - name: Install dependencies
        run: |
          python3 setup.py install

      - name: Install Lithops config
        id: config
        run: |
          echo -n -e "${{ secrets.LITHOPS_CONFIG }}" > /tmp/lithops_config.yaml

      - name: build new runtime
        env:
            LITHOPS_CONFIG_FILE: /tmp/lithops_config.yaml
        run: |
          docker login -u "${{ secrets.DOCKER_USER }}" -p "${{ secrets.DOCKER_TOKEN }}"
          cd runtime/code_engine
          lithops runtime build -f Dockerfile.githubci ${{ secrets.DOCKER_USER }}/lithops-ce-gihub-ci:${{ github.run_id }} -b code_engine
          sed -i '/runtime: lithops-ce/c\    runtime: '${{ secrets.DOCKER_USER }}'/lithops-ce-gihub-ci:'${{ github.run_id }} /tmp/lithops_config.yaml

      - name: Run Python tests
        env:
          LITHOPS_CONFIG_FILE: /tmp/lithops_config.yaml
        run: |
          lithops verify -b code_engine -s ibm_cos -k


  CF_COS_TESTS:
    runs-on: ubuntu-latest
    needs: Determine_Runnable_Jobs
    if: needs.Determine_Runnable_Jobs.outputs.ibm_cf == 'true'

    steps:
      - name: print-github.action_path
        run: echo $GITHUB_WORKSPACE

      - name: Clone Lithops repository
        uses: actions/checkout@v3

      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          architecture: x64

      - name: Install dependencies
        run: |
          python3 setup.py install

      - name: Install Lithops config
        id: config
        run: |
          echo -n -e "${{ secrets.LITHOPS_CONFIG }}" > /tmp/lithops_config.yaml

      - name: Build new runtime
        env:
          LITHOPS_CONFIG_FILE: /tmp/lithops_config.yaml
        run: |
          docker login -u "${{ secrets.DOCKER_USER }}" -p "${{ secrets.DOCKER_TOKEN }}"
          cd runtime/code_engine
          lithops runtime build -f Dockerfile.githubci ${{ secrets.DOCKER_USER }}/lithops-ce-gihub-ci:${{ github.run_id }} -b code_engine
          sed -i '/runtime: lithops-ce/c\    runtime: '${{ secrets.DOCKER_USER }}'/lithops-ce-gihub-ci:'${{ github.run_id }} /tmp/lithops_config.yaml

      - name: Run Python tests
        env:
          LITHOPS_CONFIG_FILE: /tmp/lithops_config.yaml
        run: |
          lithops verify -b ibm_cf -s ibm_cos -k


  Clean:
    if: always()  # this job will run regardless of the above job's status.
    runs-on: ubuntu-latest
    needs: [CE_COS, CF_COS]

    steps:
      - name: Clone Lithops repository
        uses: actions/checkout@v3
      
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
          architecture: x64

      - name: Install dependencies
        run: |
          python3 setup.py install
          
      - name: Install Lithops config
        run: |
          echo -n -e "${{ secrets.LITHOPS_CONFIG }}" > /tmp/lithops_config.yaml

      - name: Delete Lithops CE runtime
        if: needs.Determine_Runnable_Jobs.outputs.code_engine == 'true'
        env:
          LITHOPS_CONFIG_FILE: /tmp/lithops_config.yaml
        run: |
          lithops runtime delete ${{ secrets.DOCKER_USER }}/lithops-ce-gihub-ci:${{ github.run_id }} -b code_engine -s ibm_cos

      - name: Delete Lithops CF runtime
        if: needs.Determine_Runnable_Jobs.outputs.ibm_cf == 'true'
        env:
          LITHOPS_CONFIG_FILE: /tmp/lithops_config.yaml
        run: |
          lithops runtime delete ${{ secrets.DOCKER_USER }}/lithops-cf-gihub-ci:${{ github.run_id }} -b ibm_cf -s ibm_cos
